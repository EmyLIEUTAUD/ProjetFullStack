{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../vaccination-center.service\";\nimport * as i3 from \"../envoi-formulaire.service\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\nimport * as i6 from \"@angular/material/input\";\nimport * as i7 from \"@angular/material/form-field\";\nimport * as i8 from \"@angular/material/datepicker\";\nfunction RendezVousComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 15)(1, \"div\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelement(3, \"br\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.centre.nom, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate4(\" \", ctx_r0.centre.numAdresse, \" \", ctx_r0.centre.adresse, \", \", ctx_r0.centre.cp, \" \", ctx_r0.centre.comnom, \" \");\n  }\n}\nexport let RendezVousComponent = /*#__PURE__*/(() => {\n  class RendezVousComponent {\n    constructor(route, service, service2) {\n      this.route = route;\n      this.service = service;\n      this.service2 = service2;\n    }\n    ngOnInit() {\n      this.route.params.subscribe(params => this.service.getVaccinationCenterById(params['gid']).subscribe(resultCenters => {\n        this.centre = resultCenters;\n        console.log(\"test centre\" + this.centre.gid);\n      }));\n    }\n    EnvoyerForm(centre, prenom, nom, email, dateRdv) {\n      dateRdv = this.convertDate(dateRdv);\n      var fin = this.service2.saveRdv(centre, prenom, nom, email, dateRdv);\n      console.log(\"fichier fini : \", fin);\n    }\n    convertDate(date) {\n      var yyyy = date.getFullYear().toString();\n      var mm = (date.getMonth() + 1).toString();\n      var dd = date.getDate().toString();\n      var mmChars = mm.split('');\n      var ddChars = dd.split('');\n      return yyyy + '-' + (mmChars[1] ? mm : \"0\" + mmChars[0]) + '-' + (ddChars[1] ? dd : \"0\" + ddChars[0]);\n    }\n  }\n  RendezVousComponent.ɵfac = function RendezVousComponent_Factory(t) {\n    return new (t || RendezVousComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.VaccinationCenterService), i0.ɵɵdirectiveInject(i3.EnvoiFormulaireService));\n  };\n  RendezVousComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: RendezVousComponent,\n    selectors: [[\"app-rendez-vous\"]],\n    decls: 25,\n    vars: 7,\n    consts: [[\"class\", \"centre\", 4, \"ngIf\"], [1, \"formulaire\"], [1, \"nomprenom\"], [1, \"prenom\"], [\"id\", \"prenom\", \"placeholder\", \"Entrez votre pr\\u00E9nom\", 3, \"ngModel\", \"ngModelChange\"], [1, \"nom\"], [\"id\", \"nom\", \"placeholder\", \"Entrez votre Nom\", 3, \"ngModel\", \"ngModelChange\"], [1, \"email\"], [\"id\", \"email\", \"placeholder\", \"Entrez votre mail\", 3, \"ngModel\", \"ngModelChange\"], [1, \"date_rdv\"], [\"appearance\", \"fill\"], [\"matInput\", \"\", 3, \"matDatepicker\", \"ngModel\", \"ngModelChange\"], [\"matIconSuffix\", \"\", 3, \"for\"], [\"picker\", \"\"], [3, \"click\"], [1, \"centre\"]],\n    template: function RendezVousComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"p\");\n        i0.ɵɵtext(1, \"Prise de rendez-vous vaccination\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(2, RendezVousComponent_div_2_Template, 5, 5, \"div\", 0);\n        i0.ɵɵelementStart(3, \"div\", 1)(4, \"div\", 2)(5, \"div\", 3);\n        i0.ɵɵtext(6, \" Pr\\u00E9nom \");\n        i0.ɵɵelementStart(7, \"input\", 4);\n        i0.ɵɵlistener(\"ngModelChange\", function RendezVousComponent_Template_input_ngModelChange_7_listener($event) {\n          return ctx.prenom = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(8, \"div\", 5);\n        i0.ɵɵtext(9, \" Nom \");\n        i0.ɵɵelementStart(10, \"input\", 6);\n        i0.ɵɵlistener(\"ngModelChange\", function RendezVousComponent_Template_input_ngModelChange_10_listener($event) {\n          return ctx.nom = $event;\n        });\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(11, \"div\", 7);\n        i0.ɵɵtext(12, \" Email \");\n        i0.ɵɵelementStart(13, \"input\", 8);\n        i0.ɵɵlistener(\"ngModelChange\", function RendezVousComponent_Template_input_ngModelChange_13_listener($event) {\n          return ctx.email = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(14, \"div\", 9);\n        i0.ɵɵtext(15, \" Date du rendez-vous \");\n        i0.ɵɵelementStart(16, \"mat-form-field\", 10)(17, \"mat-label\");\n        i0.ɵɵtext(18, \"Choisissez une date\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"input\", 11);\n        i0.ɵɵlistener(\"ngModelChange\", function RendezVousComponent_Template_input_ngModelChange_19_listener($event) {\n          return ctx.dateRdv = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(20, \"mat-datepicker-toggle\", 12)(21, \"mat-datepicker\", null, 13);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(23, \"button\", 14);\n        i0.ɵɵlistener(\"click\", function RendezVousComponent_Template_button_click_23_listener() {\n          return ctx.EnvoyerForm(ctx.centre, ctx.prenom, ctx.nom, ctx.email, ctx.dateRdv);\n        });\n        i0.ɵɵtext(24, \" Envoyer formulaire \");\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        const _r1 = i0.ɵɵreference(22);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.centre);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngModel\", ctx.prenom);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngModel\", ctx.nom);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngModel\", ctx.email);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"matDatepicker\", _r1)(\"ngModel\", ctx.dateRdv);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"for\", _r1);\n      }\n    },\n    dependencies: [i4.NgIf, i5.DefaultValueAccessor, i5.NgControlStatus, i5.NgModel, i6.MatInput, i7.MatFormField, i7.MatLabel, i7.MatSuffix, i8.MatDatepicker, i8.MatDatepickerInput, i8.MatDatepickerToggle],\n    styles: [\"div.centre[_ngcontent-%COMP%] {\\n  border-style: solid;\\n  display: inline-block;\\n  padding: 10px;\\n  max-width: 400px;\\n  background-color: rgba(46, 81, 255, 0.1);\\n  border-color: rgba(20, 38, 127, 0.7);\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcmVuZGV6LXZvdXMvcmVuZGV6LXZvdXMuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxtQkFBQTtFQUNBLHFCQUFBO0VBQ0EsYUFBQTtFQUNBLGdCQUFBO0VBQ0Esd0NBQUE7RUFDQSxvQ0FBQTtBQUNKIiwic291cmNlc0NvbnRlbnQiOlsiZGl2LmNlbnRyZXtcclxuICAgIGJvcmRlci1zdHlsZTogc29saWQ7XHJcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICBwYWRkaW5nOiAxMHB4O1xyXG4gICAgbWF4LXdpZHRoOiA0MDBweDtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYig0NiwgODEsIDI1NSwgMC4xKTtcclxuICAgIGJvcmRlci1jb2xvcjogcmdiYSgyMCwgMzgsIDEyNywgMC43KTtcclxufVxyXG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n  });\n  return RendezVousComponent;\n})();","map":{"version":3,"mappings":"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","names":["i0","RendezVousComponent","constructor","route","service","service2","ngOnInit","params","subscribe","getVaccinationCenterById","resultCenters","centre","console","log","gid","EnvoyerForm","prenom","nom","email","dateRdv","convertDate","fin","saveRdv","date","yyyy","getFullYear","toString","mm","getMonth","dd","getDate","mmChars","split","ddChars","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\yunqi\\IdeaProjet\\ProjetFullStack\\VaccinationCOVID\\src\\app\\rendez-vous\\rendez-vous.component.html","C:\\Users\\yunqi\\IdeaProjet\\ProjetFullStack\\VaccinationCOVID\\src\\app\\rendez-vous\\rendez-vous.component.ts"],"sourcesContent":["<p>Prise de rendez-vous vaccination</p>\r\n<div *ngIf=\"centre\" class=\"centre\">\r\n  <div>\r\n      {{this.centre.nom}}\r\n      <br>\r\n      {{this.centre.numAdresse}} {{this.centre.adresse}}, {{this.centre.cp}} {{this.centre.comnom}} \r\n  </div>\r\n</div>\r\n<div class=\"formulaire\">\r\n  <div class=\"nomprenom\">\r\n    <div class=\"prenom\">\r\n      Prénom\r\n      <input id=\"prenom\" placeholder=\"Entrez votre prénom\" [(ngModel)]=\"prenom\"/>\r\n\r\n    </div>\r\n    <div class=\"nom\">\r\n      Nom\r\n      <input id=\"nom\" placeholder=\"Entrez votre Nom\" [(ngModel)]=\"nom\"/>\r\n    </div>\r\n  </div>\r\n  <div class=\"email\">\r\n    Email\r\n    <input id=\"email\" placeholder=\"Entrez votre mail\" [(ngModel)]=\"email\"/>\r\n  </div>\r\n  <div class=\"date_rdv\">\r\n    Date du rendez-vous\r\n    <mat-form-field appearance=\"fill\">\r\n      <mat-label>Choisissez une date</mat-label>\r\n      <input matInput [matDatepicker]=\"picker\" [(ngModel)]=\"dateRdv\">\r\n      <mat-datepicker-toggle matIconSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n      <mat-datepicker #picker></mat-datepicker>\r\n    </mat-form-field>\r\n  <button (click)=\"EnvoyerForm(centre,prenom,nom,email,dateRdv)\">\r\n    Envoyer formulaire\r\n  </button>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Params } from '@angular/router';\r\nimport { textSpanContainsPosition } from 'typescript';\r\nimport { ChoixCentre } from '../choix-centre/choix-centre';\r\nimport { EnvoiFormulaireService } from '../envoi-formulaire.service';\r\nimport { VaccinationCenterService } from '../vaccination-center.service';\r\n\r\n@Component({\r\n  selector: 'app-rendez-vous',\r\n  templateUrl: './rendez-vous.component.html',\r\n  styleUrls: ['./rendez-vous.component.scss']\r\n})\r\nexport class RendezVousComponent implements OnInit {\r\n  \r\n  centre: ChoixCentre;\r\n  prenom: string;\r\n  nom: string;\r\n  email: string;\r\n  dateRdv: string;\r\n  constructor(private route: ActivatedRoute, private service: VaccinationCenterService,private service2: EnvoiFormulaireService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.route.params.subscribe((params: Params) => this.service.getVaccinationCenterById(params['gid']).subscribe(resultCenters=> {\r\n      this.centre = resultCenters;\r\n      console.log(\"test centre\"+this.centre.gid);\r\n    }));\r\n  }\r\n\r\n  EnvoyerForm(centre: ChoixCentre,prenom: string,nom: string,email: string,dateRdv: string): void{\r\n    dateRdv = this.convertDate(dateRdv);\r\n    var fin = this.service2.saveRdv(centre, prenom, nom, email, dateRdv);\r\n    console.log(\"fichier fini : \", fin);\r\n  }\r\n\r\n  convertDate(date) { // convertion date en format yyyy-mm-dd\r\n  var yyyy = date.getFullYear().toString();\r\n  var mm = (date.getMonth()+1).toString();\r\n  var dd  = date.getDate().toString();\r\n\r\n  var mmChars = mm.split('');\r\n  var ddChars = dd.split('');\r\n\r\n  return yyyy + '-' + (mmChars[1]?mm:\"0\"+mmChars[0]) + '-' + (ddChars[1]?dd:\"0\"+ddChars[0]);\r\n  }\r\n\r\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}