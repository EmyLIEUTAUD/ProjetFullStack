{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json'\n  })\n};\nexport class AuthenticationService {\n  constructor(http) {\n    this.http = http;\n    this.currentUserSubject = new BehaviorSubject(JSON.parse(localStorage.getItem('currentUser')));\n    this.currentUser = this.currentUserSubject.asObservable();\n  }\n  get currentUserValue() {\n    return this.currentUserSubject.value;\n  }\n  login(username, password) {\n    return this.http.post('http://localhost:8080/login/authenticate', {\n      username,\n      password\n    }, httpOptions);\n  }\n  register(nom, prenom, username, password) {\n    return this.http.post('http://localhost:8080/login/nouveau', {\n      nom,\n      prenom,\n      username,\n      password\n    }, httpOptions);\n  }\n  logout() {\n    // remove user from local storage to log user out\n    localStorage.removeItem('currentUser');\n    this.currentUserSubject.next(null);\n  }\n}\nAuthenticationService.ɵfac = function AuthenticationService_Factory(t) {\n  return new (t || AuthenticationService)(i0.ɵɵinject(i1.HttpClient));\n};\nAuthenticationService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthenticationService,\n  factory: AuthenticationService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AACA,SAAqBA,WAAW,QAAS,sBAAsB;AAC/D,SAASC,eAAe,QAAoB,MAAM;;;AAIlD,MAAMC,WAAW,GAAG;EAChBC,OAAO,EAAE,IAAIH,WAAW,CAAC;IAAE,cAAc,EAAE;EAAkB,CAAE;CAChE;AAIH,OAAM,MAAOI,qBAAqB;EAI9BC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IACpB,IAAI,CAACC,kBAAkB,GAAG,IAAIN,eAAe,CAAOO,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC;IACpG,IAAI,CAACC,WAAW,GAAG,IAAI,CAACL,kBAAkB,CAACM,YAAY,EAAE;EAC7D;EAEA,IAAWC,gBAAgB;IACvB,OAAO,IAAI,CAACP,kBAAkB,CAACQ,KAAK;EACxC;EAGAC,KAAK,CAACC,QAAgB,EAAEC,QAAgB;IACpC,OAAO,IAAI,CAACZ,IAAI,CAACa,IAAI,CAAC,0CAA0C,EAAE;MAChEF,QAAQ;MACRC;KACD,EAAEhB,WAAW,CAAC;EACjB;EAEFkB,QAAQ,CAACC,GAAY,EAAEC,MAAc,EAACL,QAAgB,EAAGC,QAAgB;IACrE,OAAO,IAAI,CAACZ,IAAI,CAACa,IAAI,CAAC,qCAAqC,EAAE;MAC3DE,GAAG;MACHC,MAAM;MACNL,QAAQ;MACRC;KACD,EAAChB,WAAW,CAAC;EAChB;EAEFqB,MAAM;IACF;IACAb,YAAY,CAACc,UAAU,CAAC,aAAa,CAAC;IACtC,IAAI,CAACjB,kBAAkB,CAACkB,IAAI,CAAC,IAAI,CAAC;EACtC;;;mBAlCSrB,qBAAqB;AAAA;;SAArBA,qBAAqB;EAAAsB,SAArBtB,qBAAqB;EAAAuB,YADR;AAAM","names":["HttpHeaders","BehaviorSubject","httpOptions","headers","AuthenticationService","constructor","http","currentUserSubject","JSON","parse","localStorage","getItem","currentUser","asObservable","currentUserValue","value","login","username","password","post","register","nom","prenom","logout","removeItem","next","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\yunqi\\IdeaProjet\\ProjetFullStack\\VaccinationCOVID\\src\\app\\_services\\authentication.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders  } from '@angular/common/http';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { User } from '../_models/user';\r\nconst httpOptions = {\r\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' })\r\n  };\r\n\r\n  \r\n@Injectable({ providedIn: 'root' })\r\nexport class AuthenticationService {\r\n    private currentUserSubject: BehaviorSubject<User>;\r\n    public currentUser: Observable<User>;\r\n\r\n    constructor(private http: HttpClient) {\r\n        this.currentUserSubject = new BehaviorSubject<User>(JSON.parse(localStorage.getItem('currentUser')));\r\n        this.currentUser = this.currentUserSubject.asObservable();\r\n    }\r\n\r\n    public get currentUserValue(): User {\r\n        return this.currentUserSubject.value;\r\n    }\r\n\r\n    \r\n    login(username: string, password: string): Observable<any> {\r\n        return this.http.post('http://localhost:8080/login/authenticate', {\r\n          username,\r\n          password\r\n        }, httpOptions);\r\n      }\r\n\r\n    register(nom : string, prenom: string,username: string , password: string): Observable<any> {\r\n        return this.http.post('http://localhost:8080/login/nouveau', {\r\n          nom,\r\n          prenom,\r\n          username,\r\n          password\r\n        },httpOptions);\r\n      }\r\n\r\n    logout() {\r\n        // remove user from local storage to log user out\r\n        localStorage.removeItem('currentUser');\r\n        this.currentUserSubject.next(null);\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}