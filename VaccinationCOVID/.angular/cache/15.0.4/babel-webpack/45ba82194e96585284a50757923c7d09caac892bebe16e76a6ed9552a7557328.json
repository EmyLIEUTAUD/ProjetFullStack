{"ast":null,"code":"import * as i0 from \"@angular/core\";\nconst TOKEN_KEY = 'token';\nconst USER_KEY = 'auth-user';\nexport class TokenStorageService {\n  constructor() {}\n  signOut() {\n    window.sessionStorage.clear();\n  }\n  saveToken(token) {\n    window.sessionStorage.removeItem(TOKEN_KEY);\n    window.sessionStorage.setItem(TOKEN_KEY, token);\n  }\n  getToken() {\n    return window.sessionStorage.getItem(TOKEN_KEY);\n  }\n  saveUser(user) {\n    window.sessionStorage.removeItem(USER_KEY);\n    window.sessionStorage.setItem(USER_KEY, JSON.stringify(user));\n  }\n  getUser() {\n    const user = window.sessionStorage.getItem(USER_KEY);\n    if (user) {\n      return JSON.parse(window.atob(user.split('.')[1]));\n    }\n    return {};\n  }\n}\nTokenStorageService.ɵfac = function TokenStorageService_Factory(t) {\n  return new (t || TokenStorageService)();\n};\nTokenStorageService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: TokenStorageService,\n  factory: TokenStorageService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";AAGA,MAAMA,SAAS,GAAG,OAAO;AACzB,MAAMC,QAAQ,GAAG,WAAW;AAK5B,OAAM,MAAOC,mBAAmB;EAI9BC,eAAgB;EAMhBC,OAAO;IACLC,MAAM,CAACC,cAAc,CAACC,KAAK,EAAE;EAC/B;EAEOC,SAAS,CAACC,KAAa;IAC5BJ,MAAM,CAACC,cAAc,CAACI,UAAU,CAACV,SAAS,CAAC;IAC3CK,MAAM,CAACC,cAAc,CAACK,OAAO,CAACX,SAAS,EAAES,KAAK,CAAC;EACjD;EAEOG,QAAQ;IACb,OAAOP,MAAM,CAACC,cAAc,CAACO,OAAO,CAACb,SAAS,CAAC;EACjD;EAEOc,QAAQ,CAACC,IAAS;IACvBV,MAAM,CAACC,cAAc,CAACI,UAAU,CAACT,QAAQ,CAAC;IAC1CI,MAAM,CAACC,cAAc,CAACK,OAAO,CAACV,QAAQ,EAAEe,IAAI,CAACC,SAAS,CAACF,IAAI,CAAC,CAAC;EAC/D;EAGOG,OAAO;IACZ,MAAMH,IAAI,GAAGV,MAAM,CAACC,cAAc,CAACO,OAAO,CAACZ,QAAQ,CAAC;IACpD,IAAIc,IAAI,EAAE;MACR,OAAOC,IAAI,CAACG,KAAK,CAACd,MAAM,CAACe,IAAI,CAACL,IAAI,CAACM,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;IAGpD,OAAO,EAAE;EACX;;;mBApCWnB,mBAAmB;AAAA;;SAAnBA,mBAAmB;EAAAoB,SAAnBpB,mBAAmB;EAAAqB,YAFlB;AAAM","names":["TOKEN_KEY","USER_KEY","TokenStorageService","constructor","signOut","window","sessionStorage","clear","saveToken","token","removeItem","setItem","getToken","getItem","saveUser","user","JSON","stringify","getUser","parse","atob","split","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\yunqi\\IdeaProjet\\ProjetFullStack\\VaccinationCOVID\\src\\app\\_services\\token-storage.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport * as jwt_decode from 'jwt-decode';\r\n\r\nconst TOKEN_KEY = 'token';\r\nconst USER_KEY = 'auth-user';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TokenStorageService {\r\n \r\n\r\n\r\n  constructor() { }\r\n\r\n  \r\n \r\n  \r\n\r\n  signOut(): void {\r\n    window.sessionStorage.clear();\r\n  }\r\n\r\n  public saveToken(token: string): void {\r\n    window.sessionStorage.removeItem(TOKEN_KEY);\r\n    window.sessionStorage.setItem(TOKEN_KEY, token);\r\n  }\r\n\r\n  public getToken(): string | null {\r\n    return window.sessionStorage.getItem(TOKEN_KEY);\r\n  }\r\n\r\n  public saveUser(user: any): void {\r\n    window.sessionStorage.removeItem(USER_KEY);\r\n    window.sessionStorage.setItem(USER_KEY, JSON.stringify(user));\r\n  }\r\n \r\n\r\n  public getUser(): any {\r\n    const user = window.sessionStorage.getItem(USER_KEY);\r\n    if (user) {\r\n      return JSON.parse(window.atob(user.split('.')[1]));\r\n    }\r\n\r\n    return {};\r\n  }\r\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}