{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nconst AUTH_API = 'http://localhost:8080/login/';\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json'\n  })\n};\nexport class User {\n  constructor(status) {\n    this.status = status;\n  }\n\n}\nexport class JwtResponse {\n  constructor(jwttoken) {\n    this.jwttoken = jwttoken;\n  }\n\n}\nexport let AuthService = /*#__PURE__*/(() => {\n  class AuthService {\n    constructor(httpClient) {\n      this.httpClient = httpClient;\n    }\n\n    login(username, password) {\n      return this.httpClient.post(AUTH_API + 'authenticate', {\n        username,\n        password\n      }).pipe(map(userData => {\n        sessionStorage.setItem('username', username);\n        let tokenStr = 'Bearer ' + userData.token;\n        sessionStorage.setItem('token', tokenStr);\n        return userData;\n      }));\n    }\n\n    isUserLoggedIn() {\n      let user = sessionStorage.getItem('username'); //console.log(!(user === null))\n\n      return !(user === null);\n    }\n\n    logOut() {\n      sessionStorage.removeItem('username');\n    }\n\n    register(nom, prenom, mail, password) {\n      return this.httpClient.post(AUTH_API + 'nouveau', {\n        nom,\n        prenom,\n        mail,\n        password\n      }, httpOptions);\n    }\n\n  }\n\n  AuthService.ɵfac = function AuthService_Factory(t) {\n    return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  AuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthService,\n    factory: AuthService.ɵfac,\n    providedIn: 'root'\n  });\n  return AuthService;\n})();","map":null,"metadata":{},"sourceType":"module"}