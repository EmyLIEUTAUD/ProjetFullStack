{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json'\n  })\n};\nexport let AuthenticationService = /*#__PURE__*/(() => {\n  class AuthenticationService {\n    constructor(http) {\n      this.http = http;\n      this.currentUserSubject = new BehaviorSubject(JSON.parse(localStorage.getItem('currentUser')));\n      this.currentUser = this.currentUserSubject.asObservable();\n    }\n\n    get currentUserValue() {\n      return this.currentUserSubject.value;\n    } // login(username: string, password: string) {\n    //     return this.http.post<any>(`http://localhost:8080/login/authenticate`, { username, password })\n    //         .pipe(map(user => {\n    //             if (user && user.token) {\n    //             // store user details and jwt token in local storage to keep user logged in between page refreshes\n    //             localStorage.setItem('currentUser', JSON.stringify(user));\n    //             this.currentUserSubject.next(user);\n    //         }\n    //             return user;\n    // }));\n    // }\n\n\n    login(username, password) {\n      return this.http.post('http://localhost:8080/login/authenticate', {\n        username,\n        password\n      }, httpOptions);\n    }\n\n    register(username, prenom, nom, password) {\n      return this.http.post('http://localhost:8080/login/nouveau', {\n        username,\n        prenom,\n        nom,\n        password\n      });\n    }\n\n    logout() {\n      // remove user from local storage to log user out\n      localStorage.removeItem('currentUser');\n      this.currentUserSubject.next(null);\n    }\n\n  }\n\n  AuthenticationService.ɵfac = function AuthenticationService_Factory(t) {\n    return new (t || AuthenticationService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  AuthenticationService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthenticationService,\n    factory: AuthenticationService.ɵfac,\n    providedIn: 'root'\n  });\n  return AuthenticationService;\n})();","map":null,"metadata":{},"sourceType":"module"}